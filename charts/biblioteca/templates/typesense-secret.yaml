{{- if and .Values.typesense.enabled (not .Values.typesense.apiKeySecret.existingSecret.enabled) }}
{{- $secretName := (printf "%s-typesense-apikey" (include "biblioteca.fullname" .)) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    app.kubernetes.io/name: {{ include "biblioteca.name" . }}
    helm.sh/chart: {{ include "biblioteca.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: typesense
type: Opaque
data:
  {{- if .Values.typesense.apiKeySecret.apiKey }}
  api-key: {{ .Values.typesense.apiKeySecret.apiKey | b64enc }}
  {{- else }}
  # Get the old secret (dry-run will return an empty map)
  {{- $currentSecret := lookup "v1" "Secret" .Release.Namespace $secretName }}

  # check, if a secret is already set
  {{- if or (not $currentSecret) (not $currentSecret.data) }}
  # if not set, then generate a new password
  api-key: {{ randAlphaNum 20 | b64enc }}
  {{ else }}
  # if set, then use the old value
  api-key: {{ index $currentSecret.data "api-key" }}
  {{ end }}
  {{- end }}
{{- end }}
