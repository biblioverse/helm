---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "biblioteca.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "biblioteca.name" . }}
    helm.sh/chart: {{ include "biblioteca.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: app
    {{- with .Values.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- toYaml .Values.biblioteca.strategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "biblioteca.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "biblioteca.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: app
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range . }}
        - name: {{ . }}
        {{- end}}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "biblioteca.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- with .postStartCommand }}
            postStart:
              exec:
                command:
                  {{- toYaml . | nindent 18 }}
            {{- end }}
            {{- with .preStopCommand }}
            preStop:
              exec:
                command:
                  {{- toYaml . | nindent 18 }}
            {{- end }}
          {{- end }}
          env:
            {{- include "biblioteca.env" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.biblioteca.containerPort }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            httpGet:
              path: /status.php
              port:  {{ $.Values.biblioteca.containerPort }}
              httpHeaders:
              - name: Host
                value: {{ $.Values.biblioteca.host | quote }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            httpGet:
              path: /status.php
              port:  {{ $.Values.biblioteca.containerPort }}
              httpHeaders:
              - name: Host
                value: {{ $.Values.biblioteca.host | quote }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          {{- with .Values.startupProbe }}
          {{- if .enabled }}
          startupProbe:
            httpGet:
              path: /status.php
              port:  {{ $.Values.biblioteca.containerPort }}
              httpHeaders:
              - name: Host
                value: {{ $.Values.biblioteca.host | quote }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.biblioteca.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- include "biblioteca.volumeMounts" . | trim | nindent 12 }}
        {{- with .Values.biblioteca.extraSidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.biblioteca.extraInitContainers .Values.mariadb.enabled }}
      initContainers:
        {{- with .Values.biblioteca.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.mariadb.enabled }}
        - name: mariadb-isalive
          image: {{ .Values.mariadb.image.registry | default "docker.io" }}/{{ .Values.mariadb.image.repository }}:{{ .Values.mariadb.image.tag }}
          {{- with .Values.biblioteca.mariaDbInitContainer }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          {{- end }}
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-db" .Release.Name) }}
                  key: {{ .Values.externalDatabase.existingSecret.usernameKey }}
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.externalDatabase.existingSecret.secretName | default (printf "%s-db" .Release.Name) }}
                  key: {{ .Values.externalDatabase.existingSecret.passwordKey }}
          command:
            - "sh"
            - "-c"
            - {{ printf "until mysql --host=%s-mariadb --user=${MYSQL_USER} --password=${MYSQL_PASSWORD} --execute=\"SELECT 1;\"; do echo waiting for mysql; sleep 2; done;" .Release.Name }}
        {{- end }}{{/* end-if any database-initContainer */}}
      {{- end }}{{/* end-if any initContainer */}}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: biblioteca-books
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "biblioteca.fullname" . }}-books{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: biblioteca-covers-tmp
          {{- if .Values.persistenceTmpCovers.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistenceTmpCovers.existingClaim }}{{ .Values.persistenceTmpCovers.existingClaim }}{{- else }}{{ template "biblioteca.fullname" . }}-covers-tmp{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: biblioteca-media-tmp
          {{- if .Values.persistenceTmpMedia.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistenceTmpMedia.existingClaim }}{{ .Values.persistenceTmpMedia.existingClaim }}{{- else }}{{ template "biblioteca.fullname" . }}-media-tmp{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- with .Values.biblioteca.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      securityContext:
        {{- with .Values.biblioteca.podSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- else }}
        # Will mount configuration files as www-data (id: 33) for biblioteca
        fsGroup: 33
        {{- end }}{{/* end-with podSecurityContext */}}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
